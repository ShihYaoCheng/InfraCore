apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: strip-api
spec:
  stripPrefix:
    prefixes:
      - {{ .Values.ingress.path }}
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ig-{{ .Release.Name }}
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - kind: Rule
      match: PathPrefix(`{{ .Values.ingress.path }}`)
      middlewares:
        - name: strip-api
      services:
        - kind: Service
          name: {{ .Values.service.name }}
          port: {{ .Values.service.port }}
  tls:
    secretName: cert.staging



{{/*apiVersion: networking.k8s.io/v1beta1*/}}
{{/*kind: Ingress*/}}
{{/*metadata:*/}}
{{/*  name: ing-{{ .Release.Name }}*/}}
{{/*  annotations:*/}}
{{/*    haproxy.org/path-rewrite: {{ .Values.ingress.path }}(.*) /\1*/}}
{{/*#    cert-manager.io/cluster-issuer: zerossl-cluster-issuer*/}}
{{/*    haproxy.org/auth-type: basic-auth*/}}
{{/*    haproxy.org/auth-secret: table-basic-auth-credentials*/}}
{{/*#    acme.cert-manager.io/http01-edit-in-place: "true"*/}}
{{/*#    cert-manager.io/issue-temporary-certificate: "true"*/}}
{{/*spec:*/}}
{{/*#  tls: # < placing a host in the TLS config will indicate a certificate should be created*/}}
{{/*#    - hosts:*/}}
{{/*#        - sre.ponponsnake.com*/}}
{{/*#      secretName: secret-ingress-cert # < cert-manager will store the created certificate in this secret.*/}}
{{/*  rules:*/}}
{{/*    - host: {{ required "ingress host(domain name) is empty..." .Values.ingress.domainName }}*/}}
{{/*      http:*/}}
{{/*        paths:*/}}
{{/*          - path: {{ .Values.ingress.path }}*/}}
{{/*            backend:*/}}
{{/*              serviceName: svc-table*/}}
{{/*              servicePort: {{ .Values.service.port }}*/}}
