
.TrivyScanTemplate:
  stage: Security
  image:
    # https://hub.docker.com/r/aquasec/trivy/tags
    name: aquasec/trivy:0.27.1
    entrypoint: [""]
  variables:
    # --no-progress          suppress progress bar (default: false) [$TRIVY_NO_PROGRESS]
    # --ignore-unfixed       display only fixed vulnerabilities (default: false) [$TRIVY_IGNORE_UNFIXED]
    # --skip-dirs value      specify the directories where the traversal is skipped                          (accepts multiple inputs) [$TRIVY_SKIP_DIRS]
    TRIVY_NO_PROGRESS: "true"
#    TRIVY_SKIP_DIRS: GKE
    TRIVY_IGNORE_UNFIXED: "true"
    SCAN_PATH: ./
    REPORT_FILE: report.txt
  before_script:
    # install jq.
    - wget -O jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
    - chmod +x ./jq
    - cp jq /usr/bin
  script:
    - trivy --version

    # Prints full report.
    # --security-checks value     comma-separated list of what security issues to detect (vuln,config,secret) (default: "vuln,secret")
    # --exit-code value           Exit code when vulnerabilities were found (default: 0) [$TRIVY_EXIT_CODE]
    - trivy fs --security-checks "config,secret" $SCAN_PATH

    # Builds report and puts it in the default workdir $CI_PROJECT_DIR, so `artifacts:` can take it from there 
    - trivy fs --security-checks "config,secret" -o "$CI_PROJECT_DIR/$REPORT_FILE" $SCAN_PATH

    # Fail on high and critical vulnerabilities. 
    - results=$(eval "trivy fs --security-checks 'config,secret' -s HIGH,CRITICAL -f json $SCAN_PATH | sed '1,2d' | jq '.Results | length'")
    - echo $results
    - if [ "$results" -gt 0 ]; then exit 1; fi
  artifacts:
    paths:
      - $REPORT_FILE