# helm upgrade --install argocd ./charts/dz-argocd -n argocd --create-namespace
# helm upgrade --install argocd ../charts/dz-argocd -n argocd --create-namespace
# helm uninstall argocd -n argocd

# https://github.com/argoproj/argo-helm/blob/master/charts/argo-cd/values.yaml
# https://github.com/argoproj/argo-helm/blob/argo-cd-3.26.5/charts/argo-cd/values.yaml
# https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/application.yaml
server:
  # -- Deploy ArgoCD Applications within this helm release
  # @default -- `[]` (See [values.yaml])
  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/
  additionalApplications:
    - name: table
      namespace: argocd
      project: default
      source:
        repoURL: https://gitlab.com/GameSnake/SRE/ArgoCDApplications.git
        targetRevision: main
        path: charts/sk-table
        helm:
          # Optional Helm version to template with. If omitted it will fall back to look at the 'apiVersion' in Chart.yaml
          # and decide which Helm binary to use automatically. This field can be either 'v2' or 'v3'.
          version: v3
          valueFiles:
            - values-sre.yaml
      destination:
        server: https://kubernetes.default.svc
        namespace: table
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - PruneLast=true
#          - CreateNamespace=true
        # The retry feature is available since v1.7
        retry:
          limit: 5 # number of failed sync attempt retries; unlimited number of attempts if less than 0
          backoff:
            duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
            factor: 2 # a factor to multiply the base duration after each failed retry
            maxDuration: 3m # the maximum amount of time allowed for the backoff strategy
    - name: file
      namespace: argocd
      project: default
      source:
        repoURL: https://gitlab.com/GameSnake/SRE/ArgoCDApplications.git
        targetRevision: main
        path: charts/sk-file
        helm:
          # Optional Helm version to template with. If omitted it will fall back to look at the 'apiVersion' in Chart.yaml
          # and decide which Helm binary to use automatically. This field can be either 'v2' or 'v3'.
          version: v3
          valueFiles:
            - values-dev.yaml
      destination:
        server: https://kubernetes.default.svc
        namespace: file
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - PruneLast=true
        #          - CreateNamespace=true
        # The retry feature is available since v1.7
        retry:
          limit: 5 # number of failed sync attempt retries; unlimited number of attempts if less than 0
          backoff:
            duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
            factor: 2 # a factor to multiply the base duration after each failed retry
            maxDuration: 3m # the maximum amount of time allowed for the backoff strategy
    - name: user
      namespace: argocd
      project: default
      source:
        repoURL: https://gitlab.com/GameSnake/SRE/ArgoCDApplications.git
        targetRevision: main
        path: charts/sk-user
        helm:
          # Optional Helm version to template with. If omitted it will fall back to look at the 'apiVersion' in Chart.yaml
          # and decide which Helm binary to use automatically. This field can be either 'v2' or 'v3'.
          version: v3
          valueFiles:
            - values-sre.yaml
      destination:
        server: https://kubernetes.default.svc
        namespace: user
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - PruneLast=true
        #          - CreateNamespace=true
        # The retry feature is available since v1.7
        retry:
          limit: 5 # number of failed sync attempt retries; unlimited number of attempts if less than 0
          backoff:
            duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
            factor: 2 # a factor to multiply the base duration after each failed retry
            maxDuration: 3m # the maximum amount of time allowed for the backoff strategy


## Argo Configs
configs:
  # -- Repositories list to be used by applications
  ## Creates a secret for each key/value specified below to create repositories
  ## Note: the last example in the list would use a repository credential template,
  # configured under "configs.repositoryCredentials".
  repositories:
    sk-helm-repo:
      url: https://gitlab.com/GameSnake/SRE/ArgoCDApplications.git
      name: sk-applications
      type: git
      password: my-password
      username: my-username

#  repositories: { }
    # istio-helm-repo:
    #   url: https://storage.googleapis.com/istio-prerelease/daily-build/master-latest-daily/charts
    #   name: istio.io
    #   type: helm
    # private-helm-repo:
    #   url: https://my-private-chart-repo.internal
    #   name: private-repo
    #   type: helm
    #   password: my-password
    #   username: my-username
  # private-repo:
  #   url: https://github.com/argoproj/private-repo


## Controller
controller:
  ## Application controller metrics configuration
  metrics:
    # -- Deploy metrics service
    enabled: true
    serviceMonitor:
      # -- Enable a prometheus ServiceMonitor
      enabled: true
      # -- Prometheus ServiceMonitor interval
      interval: 30s
      # -- Prometheus ServiceMonitor selector
      selector: {}
      # prometheus: kube-prometheus

      # -- Prometheus ServiceMonitor namespace
      namespace: "" # "monitoring"
      # -- Prometheus ServiceMonitor labels
      additionalLabels:
        release: prometheus
    rules:
      # -- Deploy a PrometheusRule for the application controller
      enabled: false
      # -- PrometheusRule.Spec for the application controller
      spec:
      - alert: ArgoAppMissing
        expr: |
          absent(argocd_app_info)
        for: 15m
        labels:
          severity: critical
        annotations:
          summary: "[ArgoCD] No reported applications"
          description: >
            ArgoCD has not reported any applications data for the past 15 minutes which
            means that it must be down or not functioning properly.  This needs to be
            resolved for this cloud to continue to maintain state.
      - alert: ArgoAppNotSynced
        expr: |
          argocd_app_info{sync_status!="Synced"} == 1
        for: 12h
        labels:
          severity: warning
        annotations:
          summary: "[{{`{{$labels.name}}`}}] Application not synchronized"
          description: >
            The application [{{`{{$labels.name}}`}} has not been synchronized for over
            12 hours which means that the state of this cloud has drifted away from the
            state inside Git.
    #   selector:
    #     prometheus: kube-prometheus
    #   namespace: monitoring
    #   additionalLabels: {}